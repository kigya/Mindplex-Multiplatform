build:
  maxIssues: 0
  excludeCorrectable: false
  weights:
  # complexity: 2
  # LongParameterList: 1
  # style: 1
  # comments: 1

config:
  validation: true
  warningsAsErrors: false
  checkExhaustiveness: false
  # when writing own rules with new properties, exclude the property path e.g.: 'my_rule_set,.*>.*>[my_property]'
  excludes: ''

processors:
  active: true
  exclude:
    - 'DetektProgressListener'
  # - 'KtFileCountProcessor'
  # - 'PackageCountProcessor'
  # - 'ClassCountProcessor'
  # - 'FunctionCountProcessor'
  # - 'PropertyCountProcessor'
  # - 'ProjectComplexityProcessor'
  # - 'ProjectCognitiveComplexityProcessor'
  # - 'ProjectLLOCProcessor'
  # - 'ProjectCLOCProcessor'
  # - 'ProjectLOCProcessor'
  # - 'ProjectSLOCProcessor'
  # - 'LicenseHeaderLoaderExtension'

console-reports:
  active: true
  exclude:
    - 'ProjectStatisticsReport'
    - 'ComplexityReport'
    - 'NotificationReport'
    - 'FindingsReport'
    - 'FileBasedFindingsReport'
  #  - 'LiteFindingsReport'

output-reports:
  active: true
  exclude:
    # - 'TxtOutputReport'
    - 'XmlOutputReport'
    - 'HtmlOutputReport'
    - 'MdOutputReport'

comments:
  active: true
  CommentOverPrivateFunction:
    active: false
  CommentOverPrivateProperty:
    active: false
  DeprecatedBlockTag:
    active: false
  EndOfSentenceFormat:
    active: false
    endOfSentenceFormat: '([.?!][ \t\n\r\f<])|([.?!:]$)'
  KDocReferencesNonPublicProperty:
    active: false
    excludes: [ '**/test/**', '**/androidTest/**', '**/commonTest/**', '**/jvmTest/**', '**/jsTest/**', '**/iosTest/**' ]
  OutdatedDocumentation:
    active: false
    matchTypeParameters: true
    matchDeclarationsOrder: true
    allowParamOnConstructorProperties: false
  UndocumentedPublicClass:
    active: false
    excludes: [ '**/test/**', '**/androidTest/**', '**/commonTest/**', '**/jvmTest/**', '**/jsTest/**', '**/iosTest/**' ]
    searchInNestedClass: true
    searchInInnerClass: true
    searchInInnerObject: true
    searchInInnerInterface: true
    searchInProtectedClass: false
  UndocumentedPublicFunction:
    active: false
    excludes: [ '**/test/**', '**/androidTest/**', '**/commonTest/**', '**/jvmTest/**', '**/jsTest/**', '**/iosTest/**' ]
    searchProtectedFunction: false
  UndocumentedPublicProperty:
    active: false
    excludes: [ '**/test/**', '**/androidTest/**', '**/commonTest/**', '**/jvmTest/**', '**/jsTest/**', '**/iosTest/**' ]
    searchProtectedProperty: false

complexity:
  active: true
  CognitiveComplexMethod:
    active: false
    threshold: 10
  ComplexCondition:
    active: true
    threshold: 5
  ComplexInterface:
    active: false
    threshold: 10
    includeStaticDeclarations: false
    includePrivateDeclarations: false
    ignoreOverloaded: false
  CyclomaticComplexMethod:
    active: true
    threshold: 10
    ignoreSingleWhenExpression: false
    ignoreSimpleWhenEntries: false
    ignoreNestingFunctions: false
    nestingFunctions:
      - 'also'
      - 'apply'
      - 'forEach'
      - 'isNotNull'
      - 'ifNull'
      - 'let'
      - 'run'
      - 'use'
      - 'with'
  LabeledExpression:
    active: false
    ignoredLabels: [ ]
  LargeClass:
    active: true
    threshold: 600
  LongMethod:
    active: true
    threshold: 90
  LongParameterList:
    active: true
    functionThreshold: 16
    constructorThreshold: 7
    ignoreDefaultParameters: true
    ignoreDataClasses: true
    ignoreAnnotatedParameter: [ ]
    ignoreAnnotated: [ 'Composable' ] #ToDo exist
  MethodOverloading:
    active: false
    threshold: 6
  NamedArguments:
    active: true
    threshold: 4
    ignoreArgumentsMatchingNames: false
  NestedBlockDepth:
    active: true
    threshold: 5
  NestedScopeFunctions:
    active: false
    threshold: 1
    functions:
      - 'kotlin.apply'
      - 'kotlin.run'
      - 'kotlin.with'
      - 'kotlin.let'
      - 'kotlin.also'
  ReplaceSafeCallChainWithRun:
    active: true
  StringLiteralDuplication:
    active: true
    excludes: [ '**/test/**', '**/androidTest/**', '**/commonTest/**', '**/jvmTest/**', '**/jsTest/**', '**/iosTest/**' ]
    threshold: 2
    ignoreAnnotation: true
    excludeStringsWithLessThan5Characters: false
    ignoreStringsRegex: '$^'
    ignoreAnnotated: [ 'Composable' ] #ToDo exist
  TooManyFunctions:
    active: true
    excludes: [ '**/test/**', '**/androidTest/**', '**/commonTest/**', '**/jvmTest/**', '**/jsTest/**', '**/iosTest/**' ]
    thresholdInFiles: 11
    thresholdInClasses: 11
    thresholdInInterfaces: 11
    thresholdInObjects: 11
    thresholdInEnums: 11
    ignoreDeprecated: false
    ignorePrivate: false
    ignoreOverridden: true

coroutines:
  active: true
  GlobalCoroutineUsage:
    active: false
  InjectDispatcher:
    active: false
    dispatcherNames:
      - 'IO'
      - 'Default'
      - 'Unconfined'
  RedundantSuspendModifier:
    active: true
  SleepInsteadOfDelay:
    active: true
  SuspendFunWithCoroutineScopeReceiver: #ToDo what
    active: false
  SuspendFunWithFlowReturnType:
    active: true

empty-blocks:
  active: true
  EmptyCatchBlock:
    active: true
    allowedExceptionNameRegex: '_|(ignore|expected).*'
  EmptyClassBlock:
    active: true
  EmptyDefaultConstructor:
    active: true
  EmptyDoWhileBlock:
    active: true
  EmptyElseBlock:
    active: true
  EmptyFinallyBlock:
    active: true
  EmptyForBlock:
    active: true
  EmptyFunctionBlock:
    active: true
    ignoreOverridden: false
  EmptyIfBlock:
    active: true
  EmptyInitBlock:
    active: true
  EmptyKtFile:
    active: true #ToDo ignore if completely commented
  EmptySecondaryConstructor:
    active: true
  EmptyTryBlock:
    active: true
  EmptyWhenBlock:
    active: true
  EmptyWhileBlock:
    active: true

exceptions:
  active: true
  ExceptionRaisedInUnexpectedLocation:
    active: true
    methodNames: #ToDo in constructor too
      - 'equals'
      - 'finalize'
      - 'hashCode'
      - 'toString'
  InstanceOfCheckForException:
    active: true
    excludes: [ '**/test/**', '**/androidTest/**', '**/commonTest/**', '**/jvmTest/**', '**/jsTest/**', '**/iosTest/**' ]
  NotImplementedDeclaration: #ToDo what
    active: false
  ObjectExtendsThrowable: #ToDo what
    active: true
  PrintStackTrace: #ToDo what
    active: true
  RethrowCaughtException:
    active: true
    excludes: [ 'CancellationException' ] #ToDo exist
  ReturnFromFinally:
    active: true
    ignoreLabeled: false
  SwallowedException: #ToDo what
    active: true
    ignoredExceptionTypes:
      - 'InterruptedException'
      - 'MalformedURLException'
      - 'NumberFormatException'
      - 'ParseException'
    allowedExceptionNameRegex: '_|(ignore|expected).*'
  ThrowingExceptionFromFinally:
    active: true
  ThrowingExceptionInMain: #ToDo what
    active: false
  ThrowingExceptionsWithoutMessageOrCause:
    active: true
    excludes: [ '**/test/**', '**/androidTest/**', '**/commonTest/**', '**/jvmTest/**', '**/jsTest/**', '**/iosTest/**' ]
    exceptions: #ToDo no excludes?
      - 'ArrayIndexOutOfBoundsException'
      - 'IllegalArgumentException'
      - 'IllegalMonitorStateException'
      - 'IllegalStateException'
      - 'IndexOutOfBoundsException'
      - 'NullPointerException'
      - 'RuntimeException'
  ThrowingNewInstanceOfSameException:
    active: true
  TooGenericExceptionCaught:
    active: true
    excludes: [ '**/test/**', '**/androidTest/**', '**/commonTest/**', '**/jvmTest/**', '**/jsTest/**', '**/iosTest/**' ]
    exceptionNames:
      - 'ArrayIndexOutOfBoundsException'
      - 'Error'
      - 'Exception'
      - 'IllegalMonitorStateException'
      - 'IndexOutOfBoundsException'
      - 'NullPointerException'
      - 'RuntimeException'
      - 'Throwable'
    allowedExceptionNameRegex: '_|(ignore|expected).*'
  TooGenericExceptionThrown:
    active: true
    exceptionNames:
      - 'Error'
      - 'Exception'
      - 'RuntimeException'
      - 'Throwable'

naming:
  active: true
  BooleanPropertyNaming:
    active: true
    allowedPattern: '^(is|has|are|can)'
    ignoreOverridden: true
  ClassNaming:
    active: true
    classPattern: '[A-Z][a-zA-Z0-9]*'
  ConstructorParameterNaming:
    active: true
    parameterPattern: '[a-z][A-Za-z0-9]*'
    privateParameterPattern: '[a-z][A-Za-z0-9]*'
    excludeClassPattern: '$^'
    ignoreOverridden: true
  EnumNaming:
    active: true
    enumEntryPattern: '[A-Z][_a-zA-Z0-9]*'
  ForbiddenClassName: #ToDo what
    active: false
    forbiddenName: [ ]
  FunctionMaxLength:
    active: false
    maximumFunctionNameLength: 30
  FunctionMinLength:
    active: true
    minimumFunctionNameLength: 3
  FunctionNaming:
    active: true
    excludes: [ '**/test/**', '**/androidTest/**', '**/commonTest/**', '**/jvmTest/**', '**/jsTest/**', '**/iosTest/**' ]
    functionPattern: '[a-z][a-zA-Z0-9]*'
    ignoreAnnotated: [ 'Composable' ]
    excludeClassPattern: '$^'
    ignoreOverridden: true
  FunctionParameterNaming:
    active: true
    parameterPattern: '[a-z][A-Za-z0-9]*'
    excludeClassPattern: '$^'
    ignoreOverridden: true
  InvalidPackageDeclaration: #ToDo what
    active: true
    rootPackage: 'dev.kigya.mindplex'
    requireRootInDeclaration: false #ToDo what
  LambdaParameterNaming:
    active: false
    parameterPattern: '[a-z][A-Za-z0-9]*|_'
  MatchingDeclarationName: #ToDo what
    active: true
    mustBeFirst: true
  MemberNameEqualsClassName: #ToDo what
    active: true
    ignoreOverridden: true
  NoNameShadowing:
    active: false #for local non-nulls
  NonBooleanPropertyPrefixedWithIs: #ToDo what. I hope doesn't affect Flow
    active: true
  ObjectPropertyNaming:
    active: true
    constantPattern: '[A-Z][_A-Za-z0-9]*'
    propertyPattern: '([A-Z]+[_A-Z]*)|([a-z]+[A-Za-z]*)' #A_A or aA
    privatePropertyPattern: '(_)?[A-Za-z][_A-Za-z0-9]*'
  PackageNaming: #ToDo what else exist
    active: true
    packagePattern: '[a-z]+(\.[a-z][A-Za-z]*)*'
  TopLevelPropertyNaming:
    active: true
    constantPattern: '[A-Z][_A-Z0-9]*'
    #    propertyPattern: '[A-Za-z][_A-Za-z0-9]*'
    propertyPattern: '([A-Z]+[_A-Z]*)|([a-z]+[A-Za-z]*)' #A_A or aA
    privatePropertyPattern: '([A-Z]+[_A-Z]*)|([a-z]+[A-Za-z]*)' #A_A or aA
  VariableMaxLength:
    active: false
    maximumVariableNameLength: 64
  VariableMinLength: #ToDo except i
    active: false
    minimumVariableNameLength: 1
  VariableNaming:
    active: true
    variablePattern: '[a-z][A-Za-z0-9]*'
    privateVariablePattern: '(_)?[a-z][A-Za-z0-9]*'
    excludeClassPattern: '$^'
    ignoreOverridden: true

performance: #ToDo what else exist
  active: true
  ArrayPrimitive:
    active: true
  CouldBeSequence:
    active: true
    threshold: 3
  ForEachOnRange:
    active: true
    excludes: [ '**/test/**', '**/androidTest/**', '**/commonTest/**', '**/jvmTest/**', '**/jsTest/**', '**/iosTest/**' ]
  SpreadOperator:
    active: true
    excludes: [ '**/test/**', '**/androidTest/**', '**/commonTest/**', '**/jvmTest/**', '**/jsTest/**', '**/iosTest/**' ]
  UnnecessaryPartOfBinaryExpression:
    active: true
  UnnecessaryTemporaryInstantiation:
    active: true

potential-bugs:
  active: true
  AvoidReferentialEquality:
    active: true
    forbiddenTypePatterns:
      - 'kotlin.String'
  CastToNullableType:
    active: false
  Deprecation:
    active: false
  DontDowncastCollectionTypes: #ToDo what
    active: false
  DoubleMutabilityForCollection: #ToDo what
    active: true
    mutableTypes:
      - 'kotlin.collections.MutableList'
      - 'kotlin.collections.MutableMap'
      - 'kotlin.collections.MutableSet'
      - 'java.util.ArrayList'
      - 'java.util.LinkedHashSet'
      - 'java.util.HashSet'
      - 'java.util.LinkedHashMap'
      - 'java.util.HashMap'
  ElseCaseInsteadOfExhaustiveWhen:
    active: true
  EqualsAlwaysReturnsTrueOrFalse:
    active: true
  EqualsWithHashCodeExist:
    active: true
  ExitOutsideMain: #ToDo what
    active: false
  ExplicitGarbageCollectionCall:
    active: true
  HasPlatformType:
    active: true
  IgnoredReturnValue:
    active: true
    restrictToConfig: true
    returnValueAnnotations:
      - '*.CheckResult'
      - '*.CheckReturnValue'
    ignoreReturnValueAnnotations:
      - '*.CanIgnoreReturnValue'
    returnValueTypes:
      - 'kotlin.sequences.Sequence'
      - 'kotlinx.coroutines.flow.*Flow'
      - 'java.util.stream.*Stream'
    ignoreFunctionCall: [ ]
  ImplicitDefaultLocale:
    active: true
  ImplicitUnitReturnType:
    active: false
    allowExplicitReturnType: true
  InvalidRange: #ToDo what
    active: true
  IteratorHasNextCallsNextMethod: #ToDo what
    active: true
  IteratorNotThrowingNoSuchElementException:
    active: true
  LateinitUsage: #ToDo what
    active: true
    excludes: [ '**/test/**', '**/androidTest/**', '**/commonTest/**', '**/jvmTest/**', '**/jsTest/**', '**/iosTest/**' ]
    ignoreOnClassesPattern: ''
  MapGetWithNotNullAssertionOperator:
    active: true
  MissingPackageDeclaration:
    active: true
    excludes: [ '**/*.kts' ]
  NullCheckOnMutableProperty: #ToDo what
    active: false
  NullableToStringCall: #ToDo what
    active: false
  UnconditionalJumpStatementInLoop: #ToDo what
    active: false
  UnnecessaryNotNullCheck: #ToDo what
    active: false
  UnnecessaryNotNullOperator:
    active: true
  UnnecessarySafeCall:
    active: true
  UnreachableCatchBlock:
    active: true
  UnreachableCode:
    active: true
  UnsafeCallOnNullableType:
    active: true
    excludes: [ '**/test/**', '**/androidTest/**', '**/commonTest/**', '**/jvmTest/**', '**/jsTest/**', '**/iosTest/**' ]
  UnsafeCast: #ToDo what
    active: true
  UnusedUnaryOperator: #ToDo what
    active: true
  UselessPostfixExpression: #ToDo what
    active: true
  WrongEqualsTypeParameter: #ToDo what
    active: true

style:
  active: true
  AlsoCouldBeApply: #ToDo what
    active: true
  CanBeNonNullable: #ToDo what
    active: true
  CascadingCallWrapping: #ToDo what
    active: false
    includeElvis: true
  ClassOrdering: #ToDo what
    active: false
  CollapsibleIfStatements: #ToDo what
    active: false
  DataClassContainsFunctions:
    active: true
    conversionFunctionPrefix:
      - 'to'
      - 'mapTo'
  DataClassShouldBeImmutable:
    active: true
  DestructuringDeclarationWithTooManyEntries: #ToDo except constraints or smth
    active: true
    maxDestructuringEntries: 5
  EqualsNullCall: #ToDo what
    active: true
  EqualsOnSignatureLine: #ToDo what
    active: false
  ExplicitCollectionElementAccessMethod: #ToDo what
    active: false
  ExplicitItLambdaParameter: #ToDo what
    active: true
  ExpressionBodySyntax: #ToDo what
    active: false
    includeLineWrapping: false
  ForbiddenComment: #ToDo what
    active: true
    values:
      - 'FIXME:'
      - 'STOPSHIP:'
      - 'TODO:'  #ToDo allow TODO
    allowedPatterns: ''
    customMessage: ''
  ForbiddenImport:
    active: false
    imports: [ ]
    forbiddenPatterns: ''
  ForbiddenMethodCall:
    active: true
    methods:
      - reason: 'print does not allow you to configure the output stream. Use a logger instead.'
        value: 'kotlin.io.print'
      - reason: 'println does not allow you to configure the output stream. Use a logger instead.'
        value: 'kotlin.io.println'
  ForbiddenSuppress:
    active: false
    rules: [ ]
  ForbiddenVoid: #ToDo what
    active: true
    ignoreOverridden: false
    ignoreUsageInGenerics: false
  FunctionOnlyReturningConstant:
    active: true
    ignoreOverridableFunction: true
    ignoreActualFunction: true
    excludedFunctions: [ ]
  LoopWithTooManyJumpStatements:
    active: true
    maxJumpCount: 1
  MagicNumber: #ToDo what params
    active: true
    excludes: [ '**/test/**', '**/androidTest/**', '**/commonTest/**', '**/jvmTest/**', '**/jsTest/**', '**/iosTest/**', '**/*.kts' ]
    ignoreNumbers:
      - '-1'
      - '0'
      - '1'
    ignoreHashCodeFunction: true
    ignorePropertyDeclaration: true
    ignoreLocalVariableDeclaration: false
    ignoreConstantDeclaration: true
    ignoreCompanionObjectPropertyDeclaration: true
    ignoreAnnotation: false
    ignoreNamedArgument: true
    ignoreEnums: false
    ignoreRanges: false
    ignoreExtensionFunctions: true
  MandatoryBracesIfStatements:
    active: false
  MandatoryBracesLoops:
    active: false
  MaxChainedCallsOnSameLine:
    active: true
    maxChainedCalls: 3
  MaxLineLength: #ToDo what params
    active: true
    maxLineLength: 120
    excludePackageStatements: true
    excludeImportStatements: true
    excludeCommentStatements: false
    excludeRawStrings: true
  MayBeConst:
    active: true
  ModifierOrder:
    active: true
  MultilineLambdaItParameter: #ToDo what
    active: false
  MultilineRawStringIndentation: #ToDo what
    active: false
    indentSize: 4
  NestedClassesVisibility: #ToDo what
    active: true
  NewLineAtEndOfFile:
    active: true
  NoTabs: #ToDo what params (maybe for raw strings)
    active: true
  NullableBooleanCheck: #ToDo what
    active: false
  ObjectLiteralToLambda: #ToDo what
    active: true
  OptionalAbstractKeyword: #ToDo what
    active: true
  OptionalUnit: #ToDo what
    active: false
  OptionalWhenBraces: #ToDo what
    active: false
  PreferToOverPairSyntax: #ToDo what
    active: false
  ProtectedMemberInFinalClass:
    active: true
  RedundantExplicitType:
    active: false
  RedundantHigherOrderMapUsage: #ToDo what
    active: true
  RedundantVisibilityModifierRule:
    active: true
  ReturnCount:
    active: true
    max: 2
    excludedFunctions:
      - 'equals'
    excludeLabeled: false
    excludeReturnFromLambda: true
    excludeGuardClauses: true
  SafeCast: #ToDo what
    active: true
  SerialVersionUIDInSerializableClass:
    active: true
  SpacingBetweenPackageAndImports: #ToDo params
    active: true
  ThrowsCount:
    active: true
    max: 2
    excludeGuardClauses: false
  TrailingWhitespace: #ToDo what
    active: true
  TrimMultilineRawString:
    active: false
  UnderscoresInNumericLiterals:
    active: false
    acceptableLength: 4
    allowNonStandardGrouping: false
  UnnecessaryAbstractClass:
    active: true
  UnnecessaryAnnotationUseSiteTarget:
    active: false
  UnnecessaryApply:
    active: true
  UnnecessaryBackticks: #ToDo what
    active: true
  UnnecessaryFilter: #ToDo what
    active: true
  UnnecessaryInheritance: #ToDo what
    active: true
  UnnecessaryInnerClass:
    active: true
  UnnecessaryLet: #ToDo what
    active: true
  UnnecessaryParentheses:
    active: true
    allowForUnclearPrecedence: true #ToDo what
  UntilInsteadOfRangeTo: #ToDo what
    active: false
  UnusedImports:
    active: true
  UnusedPrivateClass:
    active: true
  UnusedPrivateMember:
    ignoreAnnotated: [ 'Preview' ]
    active: true
    allowedNames: '(_|ignored|expected|serialVersionUID)'
  UseAnyOrNoneInsteadOfFind: #ToDo what
    active: true
  UseArrayLiteralsInAnnotations:
    active: true
  UseCheckNotNull: #ToDo what
    active: true
  UseCheckOrError: #ToDo what
    active: true
  UseDataClass: #ToDo what
    active: false
    allowVars: false
  UseEmptyCounterpart: #ToDo what
    active: false
  UseIfEmptyOrIfBlank: #ToDo what
    active: true
  UseIfInsteadOfWhen: #ToDo what
    active: false
  UseIsNullOrEmpty:
    active: true
  UseOrEmpty:
    active: true
  UseRequire: #ToDo what
    active: true
  UseRequireNotNull:
    active: false
  UseSumOfInsteadOfFlatMapSize: #ToDo what
    active: false
  UselessCallOnNotNull: #ToDo what
    active: true
  UtilityClassWithPublicConstructor:
    active: true
  VarCouldBeVal:
    active: true
    ignoreLateinitVar: false
  WildcardImport:
    active: true
    excludeImports:
      - 'java.util.*'

#compose:
#  ReusedModifierInstance:
#    active: true
#  UnnecessaryEventHandlerParameter:
#    active: true
#  ComposableEventParameterNaming:
#    active: true
#  ComposableParametersOrdering:
#    active: true
#  ModifierHeightWithText:
#    active: true
#  ModifierParameterPosition:
#    active: true
#  ModifierDefaultValue:
#    active: true
#  MissingModifierDefaultValue:
#    active: true
#  PublicComposablePreview:
#    active: true
#  TopLevelComposableFunctions:
#    active: true
#    allowInObjects: false
#  ComposableFunctionName:
#    active: true
#  ConditionCouldBeLifted:
#    active: true
#    ignoreCallsWithArgumentNames: [ 'modifier', 'contentAlignment' ]

Compose:
  ComposableAnnotationNaming:
    active: true
  ComposableNaming:
    active: true
    # -- You can optionally disable the checks in this rule for regex matches against the composable name (e.g. molecule presenters)
    # allowedComposableFunctionNames: .*Presenter,.*MoleculePresenter
  ComposableParamOrder:
    active: true
    # -- You can optionally have a list of types to be treated as lambdas (e.g. typedefs or fun interfaces not picked up automatically)
    # treatAsLambda: MyLambdaType
  CompositionLocalAllowlist:
    active: true
    # -- You can optionally define a list of CompositionLocals that are allowed here
    # allowedCompositionLocals: LocalSomething, LocalSomethingElse
  CompositionLocalNaming:
    active: true
  ContentEmitterReturningValues:
    active: true
    # -- You can optionally add your own composables here
    # contentEmitters: MyComposable,MyOtherComposable
  DefaultsVisibility:
    active: true
  LambdaParameterInRestartableEffect:
    active: true
    # -- You can optionally have a list of types to be treated as lambdas (e.g. typedefs or fun interfaces not picked up automatically)
    # treatAsLambda: MyLambdaType
  ModifierClickableOrder:
    active: true
    # -- You can optionally add your own Modifier types
    # customModifiers: BananaModifier,PotatoModifier
  ModifierComposable:
    active: true
    # -- You can optionally add your own Modifier types
    # customModifiers: BananaModifier,PotatoModifier
  ModifierComposed:
    active: true
    # -- You can optionally add your own Modifier types
    # customModifiers: BananaModifier,PotatoModifier
  ModifierMissing:
    active: true
    # -- You can optionally control the visibility of which composables to check for here
    # -- Possible values are: `only_public`, `public_and_internal` and `all` (default is `only_public`)
    # checkModifiersForVisibility: only_public
    # -- You can optionally add your own Modifier types
    # customModifiers: BananaModifier,PotatoModifier
  ModifierNaming:
    active: true
    # -- You can optionally add your own Modifier types
    # customModifiers: BananaModifier,PotatoModifier
  ModifierNotUsedAtRoot:
    active: true
    # -- You can optionally add your own composables here
    # contentEmitters: MyComposable,MyOtherComposable
    # -- You can optionally add your own Modifier types
    # customModifiers: BananaModifier,PotatoModifier
  ModifierReused:
    active: true
    # -- You can optionally add your own Modifier types
    # customModifiers: BananaModifier,PotatoModifier
  ModifierWithoutDefault:
    active: true
  MultipleEmitters:
    active: true
    # -- You can optionally add your own composables here that will count as content emitters
    # contentEmitters: MyComposable,MyOtherComposable
    # -- You can add composables here that you don't want to count as content emitters (e.g. custom dialogs or modals)
    # contentEmittersDenylist: MyNonEmitterComposable
  MutableParams:
    active: true
  MutableStateParam:
    active: true
  PreviewAnnotationNaming:
    active: true
  PreviewPublic:
    active: true
  RememberMissing:
    active: true
  RememberContentMissing:
    active: true
  UnstableCollections:
    active: true
  ViewModelForwarding:
    active: true
    # -- You can optionally use this rule on things other than types ending in "ViewModel" or "Presenter" (which are the defaults). You can add your own via a regex here:
    # allowedStateHolderNames: .*ViewModel,.*Presenter
    # -- You can optionally add an allowlist for Composable names that won't be affected by this rule
    # allowedForwarding: .*Content,.*FancyStuff
  ViewModelInjection:
    active: true
    # -- You can optionally add your own ViewModel factories here
    # viewModelFactories: hiltViewModel, potatoViewModel
